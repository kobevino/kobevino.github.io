3:I[6731,[],""]
5:I[2923,[],""]
6:I[5403,["2","static/chunks/2-ad9c083589494568.js","332","static/chunks/332-a212bd7f004a89bf.js","34","static/chunks/34-00f8cbeb68282840.js","185","static/chunks/app/layout-37c356eeb03ff880.js"],"ColorSchemeScript"]
7:I[9420,["2","static/chunks/2-ad9c083589494568.js","332","static/chunks/332-a212bd7f004a89bf.js","34","static/chunks/34-00f8cbeb68282840.js","185","static/chunks/app/layout-37c356eeb03ff880.js"],"MantineProvider"]
8:I[7513,["2","static/chunks/2-ad9c083589494568.js","332","static/chunks/332-a212bd7f004a89bf.js","34","static/chunks/34-00f8cbeb68282840.js","185","static/chunks/app/layout-37c356eeb03ff880.js"],"Header"]
9:I[863,["2","static/chunks/2-ad9c083589494568.js","332","static/chunks/332-a212bd7f004a89bf.js","34","static/chunks/34-00f8cbeb68282840.js","185","static/chunks/app/layout-37c356eeb03ff880.js"],"Container"]
b:I[7792,["2","static/chunks/2-ad9c083589494568.js","42","static/chunks/app/%5Bslug%5D/page-cdea868390d0022c.js"],"Title"]
c:I[8002,["2","static/chunks/2-ad9c083589494568.js","42","static/chunks/app/%5Bslug%5D/page-cdea868390d0022c.js"],"Text"]
4:["slug","javascript-tips","d"]
a:T53f,M62.6 142c-2.133 0-3.2-1.067-3.2-3.2V118h-56c-2 0-3-1-3-3V92.8c0-1.333.4-2.733 1.2-4.2L58.2 4c.8-1.333 2.067-2 3.8-2h28c2 0 3 1 3 3v85.4h11.2c.933 0 1.733.333 2.4 1 .667.533 1 1.267 1 2.2v21.2c0 .933-.333 1.733-1 2.4-.667.533-1.467.8-2.4.8H93v20.8c0 2.133-1.067 3.2-3.2 3.2H62.6zM33 90.4h26.4V51.2L33 90.4zM181.67 144.6c-7.333 0-14.333-1.333-21-4-6.666-2.667-12.866-6.733-18.6-12.2-5.733-5.467-10.266-13-13.6-22.6-3.333-9.6-5-20.667-5-33.2 0-12.533 1.667-23.6 5-33.2 3.334-9.6 7.867-17.133 13.6-22.6 5.734-5.467 11.934-9.533 18.6-12.2 6.667-2.8 13.667-4.2 21-4.2 7.467 0 14.534 1.4 21.2 4.2 6.667 2.667 12.8 6.733 18.4 12.2 5.734 5.467 10.267 13 13.6 22.6 3.334 9.6 5 20.667 5 33.2 0 12.533-1.666 23.6-5 33.2-3.333 9.6-7.866 17.133-13.6 22.6-5.6 5.467-11.733 9.533-18.4 12.2-6.666 2.667-13.733 4-21.2 4zm0-31c9.067 0 15.6-3.733 19.6-11.2 4.134-7.6 6.2-17.533 6.2-29.8s-2.066-22.2-6.2-29.8c-4.133-7.6-10.666-11.4-19.6-11.4-8.933 0-15.466 3.8-19.6 11.4-4 7.6-6 17.533-6 29.8s2 22.2 6 29.8c4.134 7.467 10.667 11.2 19.6 11.2zM316.116 142c-2.134 0-3.2-1.067-3.2-3.2V118h-56c-2 0-3-1-3-3V92.8c0-1.333.4-2.733 1.2-4.2l56.6-84.6c.8-1.333 2.066-2 3.8-2h28c2 0 3 1 3 3v85.4h11.2c.933 0 1.733.333 2.4 1 .666.533 1 1.267 1 2.2v21.2c0 .933-.334 1.733-1 2.4-.667.533-1.467.8-2.4.8h-11.2v20.8c0 2.133-1.067 3.2-3.2 3.2h-27.2zm-29.6-51.6h26.4V51.2l-26.4 39.2z0:["YKRqHCV0ALIQBPCFsPWtB",[[["",{"children":[["slug","javascript-tips","d"],{"children":["__PAGE__?{\"slug\":\"javascript-tips\"}",{}]}]},"$undefined","$undefined",true],["",{"children":[["slug","javascript-tips","d"],{"children":["__PAGE__",{},[["$L1","$L2"],null],null]},["$","$L3",null,{"parallelRouterKey":"children","segmentPath":["children","$4","children"],"error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L5",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined","styles":[["$","link","0",{"rel":"stylesheet","href":"./_next/static/css/4c62bdaf9ccfa79d.css","precedence":"next","crossOrigin":"$undefined"}]]}],null]},[["$","html",null,{"lang":"en","children":[["$","head",null,{"children":["$","$L6",null,{"defaultColorScheme":"auto"}]}],["$","body",null,{"children":["$","$L7",null,{"theme":{"cursorType":"pointer"},"defaultColorScheme":"auto","children":[["$","$L8",null,{}],["$","$L9",null,{"children":["$","$L3",null,{"parallelRouterKey":"children","segmentPath":["children"],"error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L5",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":["$","$L9",null,{"className":"not-found_root___8tHH","children":["$","div",null,{"className":"not-found_inner__jk2We","children":[["$","svg",null,{"xmlns":"http://www.w3.org/2000/svg","viewBox":"0 0 362 145","className":"not-found_image__klXiS","children":[["$","title",null,{"children":"404"}],["$","path",null,{"fill":"currentColor","d":"$a"}]]}],["$","div",null,{"className":"not-found_content__cklTM","children":[["$","$Lb",null,{"className":"not-found_title__bOfUG","children":"Nothing to see here"}],["$","$Lc",null,{"c":"dimmed","size":"lg","ta":"center","className":"not-found_description__7RPJl","children":"Page you are trying to open does not exist. You may have mistyped the address, or the page has been moved to another URL. If you think this is an error contact support."}]]}]]}]}],"notFoundStyles":[["$","link","0",{"rel":"stylesheet","href":"./_next/static/css/9b82fbf9d3dab81a.css","precedence":"next","crossOrigin":"$undefined"}]],"styles":null}]}]]}]}]]}],null],null],[[["$","link","0",{"rel":"stylesheet","href":"./_next/static/css/dbb50fd420b33798.css","precedence":"next","crossOrigin":"$undefined"}],["$","link","1",{"rel":"stylesheet","href":"./_next/static/css/456480efaa4d0c44.css","precedence":"next","crossOrigin":"$undefined"}]],[null,"$Ld"]]]]]
d:[["$","meta","0",{"name":"viewport","content":"width=device-width, initial-scale=1"}],["$","meta","1",{"charSet":"utf-8"}],["$","title","2",{"children":"Kobe's Blog"}],["$","meta","3",{"name":"description","content":"Generated by Jaesung Lee"}],["$","link","4",{"rel":"icon","href":"/favicon.ico"}]]
1:null
e:I[5287,["2","static/chunks/2-ad9c083589494568.js","42","static/chunks/app/%5Bslug%5D/page-cdea868390d0022c.js"],"Stack"]
f:I[9231,["2","static/chunks/2-ad9c083589494568.js","42","static/chunks/app/%5Bslug%5D/page-cdea868390d0022c.js"],"Group"]
11:I[3179,["2","static/chunks/2-ad9c083589494568.js","42","static/chunks/app/%5Bslug%5D/page-cdea868390d0022c.js"],"Comments"]
10:T608f,<p>I'll share quick tips with javascript. Let's go.</p>
<h2>Create a unique ID</h2>
<figure data-rehype-pretty-code-figure=""><pre style="background-color:#282A36;color:#F8F8F2" tabindex="0" data-language="js" data-theme="dracula"><code data-language="js" data-theme="dracula" style="display: grid;"><span data-line=""><span style="color:#FF79C6">const</span><span style="color:#50FA7B"> uid</span><span style="color:#FF79C6"> =</span><span style="color:#F8F8F2"> () </span><span style="color:#FF79C6">=></span><span style="color:#F8F8F2"> {</span></span>
<span data-line=""><span style="color:#FF79C6">  const</span><span style="color:#F8F8F2"> head </span><span style="color:#FF79C6">=</span><span style="color:#F8F8F2"> Date.</span><span style="color:#50FA7B">now</span><span style="color:#F8F8F2">().</span><span style="color:#50FA7B">toString</span><span style="color:#F8F8F2">(</span><span style="color:#BD93F9">36</span><span style="color:#F8F8F2">)</span></span>
<span data-line=""><span style="color:#FF79C6">  const</span><span style="color:#F8F8F2"> tail </span><span style="color:#FF79C6">=</span><span style="color:#F8F8F2"> Math.</span><span style="color:#50FA7B">random</span><span style="color:#F8F8F2">().</span><span style="color:#50FA7B">toString</span><span style="color:#F8F8F2">(</span><span style="color:#BD93F9">36</span><span style="color:#F8F8F2">).</span><span style="color:#50FA7B">substr</span><span style="color:#F8F8F2">(</span><span style="color:#BD93F9">2</span><span style="color:#F8F8F2">)</span></span>
<span data-line=""><span style="color:#FF79C6">  return</span><span style="color:#F8F8F2"> head </span><span style="color:#FF79C6">+</span><span style="color:#F8F8F2"> tail</span></span>
<span data-line=""><span style="color:#F8F8F2">}</span></span>
<span data-line=""> </span>
<span data-line=""><span style="color:#50FA7B">uid</span><span style="color:#F8F8F2">() </span><span style="color:#6272A4">// lzv9r2pa6ij4v3lz6jt</span></span><button type="button" title="Copy code" aria-label="Copy code" data="const uid = () => {
  const head = Date.now().toString(36)
  const tail = Math.random().toString(36).substr(2)
  return head + tail
}

uid() // lzv9r2pa6ij4v3lz6jt" class="rehype-pretty-copy" onclick="navigator.clipboard.writeText(this.attributes.data.value);this.classList.add(&#x27;rehype-pretty-copied&#x27;);window.setTimeout(() => this.classList.remove(&#x27;rehype-pretty-copied&#x27;), 3000);"><span class="ready"></span><span class="success"></span></button><style>:root {--copy-icon: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 48 48'%3E%3Cpath fill='%23adadad' d='M16.187 9.5H12.25a1.75 1.75 0 0 0-1.75 1.75v28.5c0 .967.784 1.75 1.75 1.75h23.5a1.75 1.75 0 0 0 1.75-1.75v-28.5a1.75 1.75 0 0 0-1.75-1.75h-3.937a4.25 4.25 0 0 1-4.063 3h-7.5a4.25 4.25 0 0 1-4.063-3M31.813 7h3.937A4.25 4.25 0 0 1 40 11.25v28.5A4.25 4.25 0 0 1 35.75 44h-23.5A4.25 4.25 0 0 1 8 39.75v-28.5A4.25 4.25 0 0 1 12.25 7h3.937a4.25 4.25 0 0 1 4.063-3h7.5a4.25 4.25 0 0 1 4.063 3M18.5 8.25c0 .966.784 1.75 1.75 1.75h7.5a1.75 1.75 0 1 0 0-3.5h-7.5a1.75 1.75 0 0 0-1.75 1.75'/%3E%3C/svg%3E");--success-icon: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24'%3E%3Cpath fill='%2366ff85' d='M9 16.17L5.53 12.7a.996.996 0 1 0-1.41 1.41l4.18 4.18c.39.39 1.02.39 1.41 0L20.29 7.71a.996.996 0 1 0-1.41-1.41z'/%3E%3C/svg%3E");}pre:has(code) {position: relative;}pre button.rehype-pretty-copy {right: 1px;padding: 0;width: 24px;height: 24px;display: flex;margin-top: 2px;margin-right: 8px;position: absolute;border-radius: 25%;backdrop-filter: blur(3px);& span {width: 100%;aspect-ratio: 1 / 1;}& .ready {background-image: var(--copy-icon);}& .success {display: none; background-image: var(--success-icon);}}&.rehype-pretty-copied {& .success {display: block;} & .ready {display: none;}}pre button.rehype-pretty-copy.rehype-pretty-copied {opacity: 1;& .ready { display: none; }& .success { display: block; }}</style></code></pre></figure>
<p>You don't have to install packages that are related to create a unique id.
This is fast and easy way to create a unique id using javascript.</p>
<h2>How to implement method chaining</h2>
<figure data-rehype-pretty-code-figure=""><pre style="background-color:#282A36;color:#F8F8F2" tabindex="0" data-language="js" data-theme="dracula"><code data-language="js" data-theme="dracula" style="display: grid;"><span data-line=""><span style="color:#FF79C6">class</span><span style="color:#8BE9FD"> Person</span><span style="color:#F8F8F2"> {</span></span>
<span data-line=""><span style="color:#50FA7B">  log</span><span style="color:#F8F8F2">() {</span></span>
<span data-line=""><span style="color:#F8F8F2">    console.</span><span style="color:#50FA7B">log</span><span style="color:#F8F8F2">(</span><span style="color:#BD93F9;font-style:italic">this</span><span style="color:#F8F8F2">.is)</span></span>
<span data-line=""><span style="color:#FF79C6">    return</span><span style="color:#BD93F9;font-style:italic"> this</span></span>
<span data-line=""><span style="color:#F8F8F2">  }</span></span>
<span data-line=""><span style="color:#50FA7B">  walk</span><span style="color:#F8F8F2">() {</span></span>
<span data-line=""><span style="color:#BD93F9;font-style:italic">    this</span><span style="color:#F8F8F2">.is </span><span style="color:#FF79C6">=</span><span style="color:#E9F284"> '</span><span style="color:#F1FA8C">walking</span><span style="color:#E9F284">'</span></span>
<span data-line=""><span style="color:#FF79C6">    return</span><span style="color:#BD93F9;font-style:italic"> this</span></span>
<span data-line=""><span style="color:#F8F8F2">  }</span></span>
<span data-line=""><span style="color:#50FA7B">  run</span><span style="color:#F8F8F2">() {</span></span>
<span data-line=""><span style="color:#BD93F9;font-style:italic">    this</span><span style="color:#F8F8F2">.is </span><span style="color:#FF79C6">=</span><span style="color:#E9F284"> '</span><span style="color:#F1FA8C">running</span><span style="color:#E9F284">'</span></span>
<span data-line=""><span style="color:#FF79C6">    return</span><span style="color:#BD93F9;font-style:italic"> this</span></span>
<span data-line=""><span style="color:#F8F8F2">  }</span></span>
<span data-line=""><span style="color:#F8F8F2">}</span></span>
<span data-line=""> </span>
<span data-line=""><span style="color:#FF79C6">const</span><span style="color:#F8F8F2"> person </span><span style="color:#FF79C6">=</span><span style="color:#FF79C6;font-weight:bold"> new</span><span style="color:#50FA7B"> Person</span><span style="color:#F8F8F2">()</span></span>
<span data-line=""><span style="color:#F8F8F2">person</span></span>
<span data-line=""><span style="color:#F8F8F2">  .</span><span style="color:#50FA7B">walk</span><span style="color:#F8F8F2">()</span></span>
<span data-line=""><span style="color:#F8F8F2">  .</span><span style="color:#50FA7B">log</span><span style="color:#F8F8F2">() </span><span style="color:#6272A4">// walking</span></span>
<span data-line=""><span style="color:#F8F8F2">  .</span><span style="color:#50FA7B">run</span><span style="color:#F8F8F2">()</span></span>
<span data-line=""><span style="color:#F8F8F2">  .</span><span style="color:#50FA7B">log</span><span style="color:#F8F8F2">() </span><span style="color:#6272A4">// running</span></span><button type="button" title="Copy code" aria-label="Copy code" data="class Person {
  log() {
    console.log(this.is)
    return this
  }
  walk() {
    this.is = &#x27;walking&#x27;
    return this
  }
  run() {
    this.is = &#x27;running&#x27;
    return this
  }
}

const person = new Person()
person
  .walk()
  .log() // walking
  .run()
  .log() // running" class="rehype-pretty-copy" onclick="navigator.clipboard.writeText(this.attributes.data.value);this.classList.add(&#x27;rehype-pretty-copied&#x27;);window.setTimeout(() => this.classList.remove(&#x27;rehype-pretty-copied&#x27;), 3000);"><span class="ready"></span><span class="success"></span></button><style>:root {--copy-icon: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 48 48'%3E%3Cpath fill='%23adadad' d='M16.187 9.5H12.25a1.75 1.75 0 0 0-1.75 1.75v28.5c0 .967.784 1.75 1.75 1.75h23.5a1.75 1.75 0 0 0 1.75-1.75v-28.5a1.75 1.75 0 0 0-1.75-1.75h-3.937a4.25 4.25 0 0 1-4.063 3h-7.5a4.25 4.25 0 0 1-4.063-3M31.813 7h3.937A4.25 4.25 0 0 1 40 11.25v28.5A4.25 4.25 0 0 1 35.75 44h-23.5A4.25 4.25 0 0 1 8 39.75v-28.5A4.25 4.25 0 0 1 12.25 7h3.937a4.25 4.25 0 0 1 4.063-3h7.5a4.25 4.25 0 0 1 4.063 3M18.5 8.25c0 .966.784 1.75 1.75 1.75h7.5a1.75 1.75 0 1 0 0-3.5h-7.5a1.75 1.75 0 0 0-1.75 1.75'/%3E%3C/svg%3E");--success-icon: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24'%3E%3Cpath fill='%2366ff85' d='M9 16.17L5.53 12.7a.996.996 0 1 0-1.41 1.41l4.18 4.18c.39.39 1.02.39 1.41 0L20.29 7.71a.996.996 0 1 0-1.41-1.41z'/%3E%3C/svg%3E");}pre:has(code) {position: relative;}pre button.rehype-pretty-copy {right: 1px;padding: 0;width: 24px;height: 24px;display: flex;margin-top: 2px;margin-right: 8px;position: absolute;border-radius: 25%;backdrop-filter: blur(3px);& span {width: 100%;aspect-ratio: 1 / 1;}& .ready {background-image: var(--copy-icon);}& .success {display: none; background-image: var(--success-icon);}}&.rehype-pretty-copied {& .success {display: block;} & .ready {display: none;}}pre button.rehype-pretty-copy.rehype-pretty-copied {opacity: 1;& .ready { display: none; }& .success { display: block; }}</style></code></pre></figure>
<h2>Creating a range using generator functions</h2>
<figure data-rehype-pretty-code-figure=""><pre style="background-color:#282A36;color:#F8F8F2" tabindex="0" data-language="js" data-theme="dracula"><code data-language="js" data-theme="dracula" style="display: grid;"><span data-line=""><span style="color:#FF79C6">const</span><span style="color:#50FA7B"> range</span><span style="color:#FF79C6"> =</span><span style="color:#F8F8F2"> (</span><span style="color:#FFB86C;font-style:italic">end</span><span style="color:#F8F8F2">, </span><span style="color:#FFB86C;font-style:italic">start</span><span style="color:#FF79C6"> =</span><span style="color:#BD93F9"> 0</span><span style="color:#F8F8F2">, </span><span style="color:#FFB86C;font-style:italic">step</span><span style="color:#FF79C6"> =</span><span style="color:#BD93F9"> 1</span><span style="color:#F8F8F2">) </span><span style="color:#FF79C6">=></span><span style="color:#F8F8F2"> {</span></span>
<span data-line=""><span style="color:#FF79C6">  function*</span><span style="color:#50FA7B"> generateRange</span><span style="color:#F8F8F2">() {</span></span>
<span data-line=""><span style="color:#FF79C6">    let</span><span style="color:#F8F8F2"> x </span><span style="color:#FF79C6">=</span><span style="color:#F8F8F2"> start </span><span style="color:#FF79C6">-</span><span style="color:#F8F8F2"> step;</span></span>
<span data-line=""><span style="color:#FF79C6">    while</span><span style="color:#F8F8F2"> (x </span><span style="color:#FF79C6">&#x3C;</span><span style="color:#F8F8F2"> end </span><span style="color:#FF79C6">-</span><span style="color:#F8F8F2"> step) </span><span style="color:#FF79C6">yield</span><span style="color:#F8F8F2"> (x </span><span style="color:#FF79C6">+=</span><span style="color:#F8F8F2"> step);</span></span>
<span data-line=""><span style="color:#F8F8F2">  }</span></span>
<span data-line=""> </span>
<span data-line=""><span style="color:#FF79C6">  return</span><span style="color:#F8F8F2"> {</span></span>
<span data-line=""><span style="color:#F8F8F2">    [Symbol.iterator]</span><span style="color:#FF79C6">:</span><span style="color:#F8F8F2"> generateRange,</span></span>
<span data-line=""><span style="color:#F8F8F2">  };</span></span>
<span data-line=""><span style="color:#F8F8F2">};</span></span>
<span data-line=""> </span>
<span data-line=""><span style="color:#FF79C6">const</span><span style="color:#F8F8F2"> range1 </span><span style="color:#FF79C6">=</span><span style="color:#F8F8F2"> [</span><span style="color:#FF79C6">...</span><span style="color:#50FA7B">range</span><span style="color:#F8F8F2">(</span><span style="color:#BD93F9">7</span><span style="color:#F8F8F2">)] </span></span>
<span data-line=""><span style="color:#6272A4">// [0, 1, 2, 3, 4, 5, 6]</span></span>
<span data-line=""><span style="color:#FF79C6">const</span><span style="color:#F8F8F2"> range2 </span><span style="color:#FF79C6">=</span><span style="color:#F8F8F2"> [</span><span style="color:#FF79C6">...</span><span style="color:#50FA7B">range</span><span style="color:#F8F8F2">(</span><span style="color:#BD93F9">10</span><span style="color:#F8F8F2">, </span><span style="color:#BD93F9">4</span><span style="color:#F8F8F2">)] </span></span>
<span data-line=""><span style="color:#6272A4">// [4, 5, 6, 7, 8, 9]</span></span>
<span data-line=""><span style="color:#FF79C6">const</span><span style="color:#F8F8F2"> range3 </span><span style="color:#FF79C6">=</span><span style="color:#F8F8F2"> [</span><span style="color:#FF79C6">...</span><span style="color:#50FA7B">range</span><span style="color:#F8F8F2">(</span><span style="color:#BD93F9">12</span><span style="color:#F8F8F2">, </span><span style="color:#BD93F9">0</span><span style="color:#F8F8F2">, </span><span style="color:#BD93F9">2</span><span style="color:#F8F8F2">)]</span></span>
<span data-line=""><span style="color:#6272A4">// [0, 2, 4, 6, 8, 10]</span></span><button type="button" title="Copy code" aria-label="Copy code" data="const range = (end, start = 0, step = 1) => {
  function* generateRange() {
    let x = start - step;
    while (x < end - step) yield (x += step);
  }

  return {
    [Symbol.iterator]: generateRange,
  };
};

const range1 = [...range(7)] 
// [0, 1, 2, 3, 4, 5, 6]
const range2 = [...range(10, 4)] 
// [4, 5, 6, 7, 8, 9]
const range3 = [...range(12, 0, 2)]
// [0, 2, 4, 6, 8, 10]" class="rehype-pretty-copy" onclick="navigator.clipboard.writeText(this.attributes.data.value);this.classList.add(&#x27;rehype-pretty-copied&#x27;);window.setTimeout(() => this.classList.remove(&#x27;rehype-pretty-copied&#x27;), 3000);"><span class="ready"></span><span class="success"></span></button><style>:root {--copy-icon: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 48 48'%3E%3Cpath fill='%23adadad' d='M16.187 9.5H12.25a1.75 1.75 0 0 0-1.75 1.75v28.5c0 .967.784 1.75 1.75 1.75h23.5a1.75 1.75 0 0 0 1.75-1.75v-28.5a1.75 1.75 0 0 0-1.75-1.75h-3.937a4.25 4.25 0 0 1-4.063 3h-7.5a4.25 4.25 0 0 1-4.063-3M31.813 7h3.937A4.25 4.25 0 0 1 40 11.25v28.5A4.25 4.25 0 0 1 35.75 44h-23.5A4.25 4.25 0 0 1 8 39.75v-28.5A4.25 4.25 0 0 1 12.25 7h3.937a4.25 4.25 0 0 1 4.063-3h7.5a4.25 4.25 0 0 1 4.063 3M18.5 8.25c0 .966.784 1.75 1.75 1.75h7.5a1.75 1.75 0 1 0 0-3.5h-7.5a1.75 1.75 0 0 0-1.75 1.75'/%3E%3C/svg%3E");--success-icon: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24'%3E%3Cpath fill='%2366ff85' d='M9 16.17L5.53 12.7a.996.996 0 1 0-1.41 1.41l4.18 4.18c.39.39 1.02.39 1.41 0L20.29 7.71a.996.996 0 1 0-1.41-1.41z'/%3E%3C/svg%3E");}pre:has(code) {position: relative;}pre button.rehype-pretty-copy {right: 1px;padding: 0;width: 24px;height: 24px;display: flex;margin-top: 2px;margin-right: 8px;position: absolute;border-radius: 25%;backdrop-filter: blur(3px);& span {width: 100%;aspect-ratio: 1 / 1;}& .ready {background-image: var(--copy-icon);}& .success {display: none; background-image: var(--success-icon);}}&.rehype-pretty-copied {& .success {display: block;} & .ready {display: none;}}pre button.rehype-pretty-copy.rehype-pretty-copied {opacity: 1;& .ready { display: none; }& .success { display: block; }}</style></code></pre></figure>
<p>Now we can produce various kinds of ranges. 🙌</p>
<h2>Check network status</h2>
<figure data-rehype-pretty-code-figure=""><pre style="background-color:#282A36;color:#F8F8F2" tabindex="0" data-language="js" data-theme="dracula"><code data-language="js" data-theme="dracula" style="display: grid;"><span data-line=""><span style="color:#FF79C6">if</span><span style="color:#F8F8F2"> (navigator.onLine) {</span></span>
<span data-line=""><span style="color:#F8F8F2">  console.</span><span style="color:#50FA7B">log</span><span style="color:#F8F8F2">(</span><span style="color:#E9F284">'</span><span style="color:#F1FA8C">online</span><span style="color:#E9F284">'</span><span style="color:#F8F8F2">)</span></span>
<span data-line=""><span style="color:#F8F8F2">} </span><span style="color:#FF79C6">else</span><span style="color:#F8F8F2"> {</span></span>
<span data-line=""><span style="color:#F8F8F2">  console.</span><span style="color:#50FA7B">log</span><span style="color:#F8F8F2">(</span><span style="color:#E9F284">'</span><span style="color:#F1FA8C">offline</span><span style="color:#E9F284">'</span><span style="color:#F8F8F2">)</span></span>
<span data-line=""><span style="color:#F8F8F2">}</span></span><button type="button" title="Copy code" aria-label="Copy code" data="if (navigator.onLine) {
  console.log(&#x27;online&#x27;)
} else {
  console.log(&#x27;offline&#x27;)
}" class="rehype-pretty-copy" onclick="navigator.clipboard.writeText(this.attributes.data.value);this.classList.add(&#x27;rehype-pretty-copied&#x27;);window.setTimeout(() => this.classList.remove(&#x27;rehype-pretty-copied&#x27;), 3000);"><span class="ready"></span><span class="success"></span></button><style>:root {--copy-icon: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 48 48'%3E%3Cpath fill='%23adadad' d='M16.187 9.5H12.25a1.75 1.75 0 0 0-1.75 1.75v28.5c0 .967.784 1.75 1.75 1.75h23.5a1.75 1.75 0 0 0 1.75-1.75v-28.5a1.75 1.75 0 0 0-1.75-1.75h-3.937a4.25 4.25 0 0 1-4.063 3h-7.5a4.25 4.25 0 0 1-4.063-3M31.813 7h3.937A4.25 4.25 0 0 1 40 11.25v28.5A4.25 4.25 0 0 1 35.75 44h-23.5A4.25 4.25 0 0 1 8 39.75v-28.5A4.25 4.25 0 0 1 12.25 7h3.937a4.25 4.25 0 0 1 4.063-3h7.5a4.25 4.25 0 0 1 4.063 3M18.5 8.25c0 .966.784 1.75 1.75 1.75h7.5a1.75 1.75 0 1 0 0-3.5h-7.5a1.75 1.75 0 0 0-1.75 1.75'/%3E%3C/svg%3E");--success-icon: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24'%3E%3Cpath fill='%2366ff85' d='M9 16.17L5.53 12.7a.996.996 0 1 0-1.41 1.41l4.18 4.18c.39.39 1.02.39 1.41 0L20.29 7.71a.996.996 0 1 0-1.41-1.41z'/%3E%3C/svg%3E");}pre:has(code) {position: relative;}pre button.rehype-pretty-copy {right: 1px;padding: 0;width: 24px;height: 24px;display: flex;margin-top: 2px;margin-right: 8px;position: absolute;border-radius: 25%;backdrop-filter: blur(3px);& span {width: 100%;aspect-ratio: 1 / 1;}& .ready {background-image: var(--copy-icon);}& .success {display: none; background-image: var(--success-icon);}}&.rehype-pretty-copied {& .success {display: block;} & .ready {display: none;}}pre button.rehype-pretty-copy.rehype-pretty-copied {opacity: 1;& .ready { display: none; }& .success { display: block; }}</style></code></pre></figure>
<p>You can get current status.</p>
<h2>Redirecting user</h2>
<figure data-rehype-pretty-code-figure=""><pre style="background-color:#282A36;color:#F8F8F2" tabindex="0" data-language="js" data-theme="dracula"><code data-language="js" data-theme="dracula" style="display: grid;"><span data-line=""><span style="color:#FF79C6">const</span><span style="color:#50FA7B"> redirect</span><span style="color:#FF79C6"> =</span><span style="color:#F8F8F2"> (</span><span style="color:#FFB86C;font-style:italic">url</span><span style="color:#F8F8F2">) </span><span style="color:#FF79C6">=></span><span style="color:#F8F8F2"> (location.href </span><span style="color:#FF79C6">=</span><span style="color:#F8F8F2"> url)</span></span><button type="button" title="Copy code" aria-label="Copy code" data="const redirect = (url) => (location.href = url)" class="rehype-pretty-copy" onclick="navigator.clipboard.writeText(this.attributes.data.value);this.classList.add(&#x27;rehype-pretty-copied&#x27;);window.setTimeout(() => this.classList.remove(&#x27;rehype-pretty-copied&#x27;), 3000);"><span class="ready"></span><span class="success"></span></button><style>:root {--copy-icon: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 48 48'%3E%3Cpath fill='%23adadad' d='M16.187 9.5H12.25a1.75 1.75 0 0 0-1.75 1.75v28.5c0 .967.784 1.75 1.75 1.75h23.5a1.75 1.75 0 0 0 1.75-1.75v-28.5a1.75 1.75 0 0 0-1.75-1.75h-3.937a4.25 4.25 0 0 1-4.063 3h-7.5a4.25 4.25 0 0 1-4.063-3M31.813 7h3.937A4.25 4.25 0 0 1 40 11.25v28.5A4.25 4.25 0 0 1 35.75 44h-23.5A4.25 4.25 0 0 1 8 39.75v-28.5A4.25 4.25 0 0 1 12.25 7h3.937a4.25 4.25 0 0 1 4.063-3h7.5a4.25 4.25 0 0 1 4.063 3M18.5 8.25c0 .966.784 1.75 1.75 1.75h7.5a1.75 1.75 0 1 0 0-3.5h-7.5a1.75 1.75 0 0 0-1.75 1.75'/%3E%3C/svg%3E");--success-icon: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24'%3E%3Cpath fill='%2366ff85' d='M9 16.17L5.53 12.7a.996.996 0 1 0-1.41 1.41l4.18 4.18c.39.39 1.02.39 1.41 0L20.29 7.71a.996.996 0 1 0-1.41-1.41z'/%3E%3C/svg%3E");}pre:has(code) {position: relative;}pre button.rehype-pretty-copy {right: 1px;padding: 0;width: 24px;height: 24px;display: flex;margin-top: 2px;margin-right: 8px;position: absolute;border-radius: 25%;backdrop-filter: blur(3px);& span {width: 100%;aspect-ratio: 1 / 1;}& .ready {background-image: var(--copy-icon);}& .success {display: none; background-image: var(--success-icon);}}&.rehype-pretty-copied {& .success {display: block;} & .ready {display: none;}}pre button.rehype-pretty-copy.rehype-pretty-copied {opacity: 1;& .ready { display: none; }& .success { display: block; }}</style></code></pre></figure>
<p>You can redirect the user to any specific URL using javascript.</p>
<h2>How to check if an object is empty in javascript</h2>
<figure data-rehype-pretty-code-figure=""><pre style="background-color:#282A36;color:#F8F8F2" tabindex="0" data-language="js" data-theme="dracula"><code data-language="js" data-theme="dracula" style="display: grid;"><span data-line=""><span style="color:#FF79C6">const</span><span style="color:#F8F8F2"> obj </span><span style="color:#FF79C6">=</span><span style="color:#F8F8F2"> {}</span></span>
<span data-line=""><span style="color:#FF79C6">const</span><span style="color:#F8F8F2"> isEmpty </span><span style="color:#FF79C6">=</span><span style="color:#F8F8F2"> Object.</span><span style="color:#50FA7B">keys</span><span style="color:#F8F8F2">(obj).length </span><span style="color:#FF79C6">===</span><span style="color:#BD93F9"> 0</span></span>
<span data-line=""><span style="color:#F8F8F2">console.</span><span style="color:#50FA7B">log</span><span style="color:#F8F8F2">(isEmpty) </span><span style="color:#6272A4">// true</span></span><button type="button" title="Copy code" aria-label="Copy code" data="const obj = {}
const isEmpty = Object.keys(obj).length === 0
console.log(isEmpty) // true" class="rehype-pretty-copy" onclick="navigator.clipboard.writeText(this.attributes.data.value);this.classList.add(&#x27;rehype-pretty-copied&#x27;);window.setTimeout(() => this.classList.remove(&#x27;rehype-pretty-copied&#x27;), 3000);"><span class="ready"></span><span class="success"></span></button><style>:root {--copy-icon: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 48 48'%3E%3Cpath fill='%23adadad' d='M16.187 9.5H12.25a1.75 1.75 0 0 0-1.75 1.75v28.5c0 .967.784 1.75 1.75 1.75h23.5a1.75 1.75 0 0 0 1.75-1.75v-28.5a1.75 1.75 0 0 0-1.75-1.75h-3.937a4.25 4.25 0 0 1-4.063 3h-7.5a4.25 4.25 0 0 1-4.063-3M31.813 7h3.937A4.25 4.25 0 0 1 40 11.25v28.5A4.25 4.25 0 0 1 35.75 44h-23.5A4.25 4.25 0 0 1 8 39.75v-28.5A4.25 4.25 0 0 1 12.25 7h3.937a4.25 4.25 0 0 1 4.063-3h7.5a4.25 4.25 0 0 1 4.063 3M18.5 8.25c0 .966.784 1.75 1.75 1.75h7.5a1.75 1.75 0 1 0 0-3.5h-7.5a1.75 1.75 0 0 0-1.75 1.75'/%3E%3C/svg%3E");--success-icon: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24'%3E%3Cpath fill='%2366ff85' d='M9 16.17L5.53 12.7a.996.996 0 1 0-1.41 1.41l4.18 4.18c.39.39 1.02.39 1.41 0L20.29 7.71a.996.996 0 1 0-1.41-1.41z'/%3E%3C/svg%3E");}pre:has(code) {position: relative;}pre button.rehype-pretty-copy {right: 1px;padding: 0;width: 24px;height: 24px;display: flex;margin-top: 2px;margin-right: 8px;position: absolute;border-radius: 25%;backdrop-filter: blur(3px);& span {width: 100%;aspect-ratio: 1 / 1;}& .ready {background-image: var(--copy-icon);}& .success {display: none; background-image: var(--success-icon);}}&.rehype-pretty-copied {& .success {display: block;} & .ready {display: none;}}pre button.rehype-pretty-copy.rehype-pretty-copied {opacity: 1;& .ready { display: none; }& .success { display: block; }}</style></code></pre></figure>
<h2>Wrap Up</h2>
<p>I think it's not a big deal, but I believe they're useful tips.</p>2:[["$","$Le",null,{"children":[["$","$Lb",null,{"order":2,"fw":900,"size":"h1","children":"Javascript Tips"}],["$","$Lc",null,{"size":"sm","c":"dimmed","children":"Thu, Aug 15,  2024"}]]}],["$","$Lf",null,{"className":"markdown","children":["$","div",null,{"className":"markdown","dangerouslySetInnerHTML":{"__html":"$10"}}]}],["$","$L11",null,{}]]
